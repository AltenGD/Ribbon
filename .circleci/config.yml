version: 2
machine:
  environment:
    PATH: "/opt/yarn/yarn-v1.5.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:${PATH}:${HOME}/${Ribbon}/node_modules/.bin"
    NODE_ENV: test
  node:
    version: 8.11.1
  npm:
    version: 6.0.0
general:
  branches:
    only:
      - master
jobs:
  build:
    docker:
      - image: circleci/node:8
    working_directory: ~/ribbon
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-{{ .Branch }}
            - yarn-packages-master
            - yarn-packages-
      - run:
          name: Update APT
          command: sudo apt-get update && sudo apt-get upgrade -y
      - run:
          name: Install apt-transport-https for yarn repo
          command: sudo apt-get install -y apt-transport-https
      - run:
          name: Fetch yarn public gpg key
          command: curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
      - run:
          name: Add yarn repo to sources
          command: echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
      - run:
          name: Update apt and add build dependencies
          command: sudo apt-get update && sudo apt-get install -y yarn build-essential libcairo2-dev libjpeg-dev libpango1.0-dev libgif-dev
      - run:
          name: Install global node modules
          command: sudo npm install -g node-pre-gyp node-gyp mocha mocha-junit-reporter eslint
      - run:
          name: Install ribbon dependencies
          command: yarn install
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run:
          name: Create folder for mocha and eslint
          command: mkdir coverage
      - run:
          name: Run eslint
          command: eslint ./src/ --format junit --output-file coverage/eslint-results.xml
          when: always
      - run:
          name: Run Mocha tests
          command: mocha --reporter mocha-junit-reporter --reporter-options mochaFile=coverage/mocha-results.xml src/test/mocha.js
          when: always
      - run:
          name: Send Report to Codecov
          command: bash <(curl -s https://codecov.io/bash) -f coverage/eslint-results.xml coverage/mocha-results.xml -t $codecovtoken
          when: always
      - store_test_results:
          path: coverage
      - store_artifacts:
          path: coverage
notify:
  webhooks:
    - url: https://skyhook.glitch.me/api/webhooks/431587377799233537/_kvV2bj5VcFeDX7gf5LmdwQIdVF_bA0xG_zYg-06-LPz8uZbiWLj2oH-1DX_vj1SsrSQ/circleci